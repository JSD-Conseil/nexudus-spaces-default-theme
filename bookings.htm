{% extends master.master %}
{% block content %}
<div id="wrapper">
  <!-- CONTAINER -->
  <div id="main" class="container">
    <!-- BREADCRUMB -->
    <ul class="breadcrumb">
      <li><a href="{% Url PublicHome, Index %}">{% T Home %}</a> <span class="divider">/</span></li>
      <li class="active">{% T Events and bookings %}</li>
    </ul>
    <!-- END BREADCRUMB -->
    <div class="row">      
        <h2 class="page-title span12">
            {% if data.Local.Resource == null %}
            {% T Events and bookings calendar %}
            {% else %}
            {{ data.Local.Resource.Name }}
            {% endif %}
            <select id="resource-filter" class="pull-right hidden-phone" style="margin-top: 5px">
                <option value="">{% T Show all resources %}</option>
                {% for resource in data.Resources %}
                <option {%if data.Local.Resource.Id == resource.Id %}selected="selected"{%endif%} value="{{ resource.Id }}">{{ resource.Name }}</option>
                {% endfor %}
            </select>
        </h2>
      
      <!-- CONTENT -->
      <section id="content" class="span12">
        {% if data.Coworker != null or data.Setting_Bookings_EnableGuestBookings %}
        <div class="alert alert-info fade in text-center">
            <b>{% T Click in the calendar to request a booking. %}</b>
        </div>
        {% else %}
        <p>
          <a class="btn btn-orange" href="{% Url Login, Index, lang: data.Language %}&returnUrl={{ data.URL }}">{% T Login to make a booking %}</a>
        </p>
        {% endif %}
        <div id="calendar" class="well"></div>
        <div>
          <span>{% T Legend %}:</span>
          <span class="label" style="background: black">{% T Your bookings %}</span>
          <span class="label" style="background: #a1a1a1">{% T Events %}</span>
          <span class="label" style="background: lightgray">{% T Booked Resource %}</span>
          {% if data.Coworker != null or data.Setting_Bookings_EnableGuestBookings %}
          <a onclick="createBooking(new Date())" class="btn btn-orange pull-right">{% T Make a booking %}</a>
          {% else %}
          <a class="btn btn-orange pull-right" href="{% Url Login, Index, lang: data.Language %}&returnUrl=/{{ data.Language }}/bookings">{% T Login to make a booking %}</a>
          {% endif %}
        </div>
        
      </section>
      <!-- END CONTENT -->
    </div>
  </div>
  <!-- END CONTAINER -->
  
  {% include booking.htm %}
</div>

<!-- UNPAID BOOKING MODAL -->
{% if data.Local.UnpaidBookings.size > 0 %}
<!-- MODAL -->
<div id="modal_unpaidbooking" class="modal hide fade" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="static">
  
  <form class="row-fluid"  action="{% Url Bookings, Pay %}" method="post">
    <!-- MODAL HEADER-->
    <div class="modal-header">
      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&#215;</button>
      <h3 >{% T Booking payment %}</h3>
    </div>
    <!-- END MODAL HEADER-->
    
    <!-- MODAL BODY-->
    <div class="modal-body">
      <h5>
        {% T The following bookings require payment before they are confirmed: %}
      </h5>
      <table class="table">
        <thead>
          <th>{% T Resource %}</th>
          <th>{% T From %}</th>
        </thead>
        <tbody>
          {% for booking in data.Local.UnpaidBookings %}
          <tr>
            <td>{{ booking.Resource.Name }}</td>
            <td>{{ booking.FromTime | FormatDate: 'g' }} </td>
          </tr>
          {% endfor %}
        </tbody>
      </table>
      <div class="alert alert-info">
        {% T Please pay the bookings above within the next 15 minutes to make sure the booking slot is not made available to other members %}
      </div>
    </div>
    <!-- END MODAL BODY-->
    
    <!-- MODAL FOOTER-->
    <div class="modal-footer">
      <button class="btn btn-link" data-dismiss="modal" aria-hidden="true">{% T Go back %}</button>
      <button type="submit" class="btn btn-orange">{% T Pay these bookings %}</button>
    </div>
  </form>
  <!-- END MODAL FOOTER-->
</div>
<!-- END MODAL -->
{% endif %}
<!-- END UNPAID BOOKING MODAL -->


{% endblock %}
{% block script %}

<script>
    $('#modal_unpaidbooking').modal();    
    $('#Booking_Resource').prepend('<option></option>');
  
    var vm;
    var fc = $('#calendar').fullCalendar({
        lang: '{{ data.Language }}',
        allDaySlot: false,
        firstDay: 1,
        resources: [
          {% for resource in data.Resources %}
          {'id':{{ resource.Id }},'name':'{{ resource.Name }}'},
          {% endfor %}
          
          ],
        
        
        eventClick: function(calEvent, jsEvent, view) {
            if(calEvent.url)
                window.location = url;
            else if(calEvent.private) {
                showWarningMessage('{% T This is a booking made by another member of {0} ||  data.Business.Name %}');
                return false;
            }
            else
            {
                showBooking(calEvent);
                return false;
            }
        },
        dayClick: function(date, evData, jsEvent) { 
            if(evData.data && evData.data.id)
                $('#Booking_Resource').val(evData.data.id);
            else
                $('#Booking_Resource').val(null);
            {% if data.Coworker != null %}
            createBooking(date.local().toDate());
            {% elseif data.Setting_Bookings_EnableGuestBookings %}
            createBooking(date.local().toDate());
            {% else %}
            showWarningMessage('{% T Login to make a booking %}');
            {% endif %}
        },
        defaultView: $(window).width() < 768 ? 'basicDay' : '{% if data.Local.Resource.Id > 0 %}agendaDay{% else %}resourceDay{% endif %}',
        editable: true,
        header: {
            left:   $(window).width() >= 768 ? 'title' : null,
            center: $(window).width() < 768 ? 'basicDay' : 'month, agendaWeek, {% if data.Local.Resource.Id > 0 %}agendaDay{% else %}resourceDay{% endif %}',
            right:  'today prev,next'
        },
        eventSources: [
        {
        events: [
        {% for event in data.Local.Bookings %}
        {
        id: {{ event.Id }},
        resources: {{ event.Resource.Id }},
        title  : '{{ event.Resource.Name | Replace: "'", "\'" }}',
        startDate: '{{event.FromTime | Date: 'd'}}',
        endDate: '{{event.ToTime | Date: 'd'}}',
        startTime: '{{event.FromTime | Date: 't'}}',
        endTime: '{{event.ToTime | Date: 't'}}',
        start  : '{{event.FromTime | Date: 'yyyy' }}-{{ event.FromTime | Date: 'MM' }}-{{ event.FromTime | Date: 'dd' }}T{{ event.FromTime | Date: 'HH' }}:{{ event.FromTime | Date: 'mm' }}Z',
        end  : '{{ event.ToTime | Date: 'yyyy' }}-{{ event.ToTime  | Date: 'MM' }}-{{ event.ToTime  | Date: 'dd' }}T{{ event.ToTime  | Date: 'HH' }}:{{ event.ToTime  | Date: 'mm' }}Z',
        allDay : false,
        editable: false,
        ignoreTimezone: true,
        color: getColurFromName('{{ event.Resource.Name }}')
        },
    {% endfor %}  
    {% if data.Local.ShowAll and data.Local.ShowAllBookings %}
    {% for event in data.Local.AllBookings %}
    {
        private: true,
        resources: {{ event.Resource.Id }},
        title  : '{{ event.Resource.Name | Replace: "'", "\'" }}',
        start  : '{{ event.FromTime | Date: 'yyyy' }}-{{ event.FromTime | Date: 'MM' }}-{{ event.FromTime | Date: 'dd' }}T{{ event.FromTime | Date: 'HH' }}:{{ event.FromTime | Date: 'mm' }}Z',
        end  : '{{ event.ToTime | Date: 'yyyy' }}-{{ event.ToTime  | Date: 'MM' }}-{{ event.ToTime  | Date: 'dd' }}T{{ event.ToTime  | Date: 'HH' }}:{{ event.ToTime  | Date: 'mm' }}Z',
        allDay : false,
        editable: false,
        ignoreTimezone: true,
        color: getColurFromName('{{ event.Resource.Name }}')
    },
    {% endfor %}
    {% if data.Local.ShowAll %}
    {% if data.Local.Resource == null %}
    {% for event in data.Local.Events %}
    {
    private: true,
    url: '{% Url events, view, id: event.Id, title: event.Name | Clean %}',
    title  : '{{ event.Name | Replace: "'", "\'" }}',
    start  : '{{ event.StartDate | Date: 'yyyy' }}-{{ event.StartDate | Date: 'MM' }}-{{ event.StartDate | Date: 'dd' }}T{{ event.StartDate | Date: 'HH' }}:{{ event.StartDate | Date: 'mm' }}Z',
    end  : '{{ event.EndDate | Date: 'yyyy' }}-{{ event.EndDate | Date: 'MM' }}-{{ event.EndDate | Date: 'dd' }}T{{ event.EndDate | Date: 'HH' }}:{{ event.EndDate | Date: 'mm' }}Z',
    allDay : false,
    editable: true,
    ignoreTimezone: true
    },
    {% endfor %}
    {% endif %}
    {% endif %}
    {% endif %}
    {
        title  : 'BOT',
        start  : '1950-01-01T00:00:00',
        allDay : false // will make the time show
    }
    ]},
                            $.fullCalendar.gcalFeed('{% Setting Google.CalendarXmlFeed %}')
    ]
    });
       
    $(function () { 
         
        var coeff = 1000 * 60 * 15;
         
        //Resource filter
        $('#resource-filter').change(function(){
            var resourceId = $(this).val();
            window.location = '{% Url Bookings, Index %}?showAll={{data.Local.ShowAll}}&resourceid=' + resourceId;
        });
         
        //Initialize timepickers
        $("#Booking_From").datetimepicker({ language: '{{ data.Language }}', format: "dd MM yyyy - HH:ii P", minuteStep: 15, showMeridian: true, autoclose: true, todayBtn: true, startDate: '+0d' });
        $("#Booking_To").datetimepicker({ language: '{{ data.Language }}', format: "dd MM yyyy - HH:ii P", minuteStep: 15, showMeridian: true, autoclose: true, todayBtn: true, startDate: '+0d', startView: 1 });
         
         
        //If todate is > from date, move to date ahead
        $('#Booking_From').on('changeDate', function(){
            var fromDate = $('#Booking_From').datetimepicker('getDate');
            var toDate = $('#Booking_To').datetimepicker('getDate');
            //Round the date
            fromDate = new Date(Math.round(fromDate.getTime() / coeff) * coeff);
            $('#Booking_From').datetimepicker('setDate', fromDate);
           
            $('#Booking_To').datetimepicker('setStartDate', fromDate);
            if(fromDate > toDate) 
                $('#Booking_To').datetimepicker('setDate',fromDate);
           
            checkBooking();
        });
         
        //If todate is > from date, move from date back
        $('#Booking_To').on('changeDate', function(){
            var fromDate = $('#Booking_From').datetimepicker('getDate');
            var toDate = $('#Booking_To').datetimepicker('getDate');
           
            //Round the date
            toDate = new Date(Math.round(toDate.getTime() / coeff) * coeff);
            $('#Booking_To').datetimepicker('setDate',toDate);
           
            $('#Booking_From').datetimepicker('setEndDate', toDate);
           
            if(fromDate > toDate){
                $('#Booking_From').datetimepicker('setDate',toDate);
            }
           
            checkBooking();
        });
         
        $('#modal_booking form').on("submit", function(event) {
            var id = $('#booking_id').val();
            var url;
            if(id > 0)
                url = '{% Url Bookings, BookingJson %}';
            else
                url = '{% Url Bookings, NewBookingJson %}';
           
            var data = getBookingData();
            postAndClose(url, data, function(){ location.reload(true); });
            event.preventDefault();
        });
         
        $('#delete-button').click(function () {
            if (confirm('{% T Cancel this booking? %}'))
            {
                var url = '{% Url Bookings, DeleteJson %}';
                var id = $('#booking_id').val();
                postAndClose(url, {id: id}, function(){ location.reload(true); });
            }
            return false;
        });
         
        $('#Booking_Resource').attr('data-bind','event: { change: updateProducts }');
         
        var loadProducts = function(){
            var bid = $('#booking_id').val();
            var rid = $('#Booking_Resource').val();
            if(bid && bid > 0 && rid && rid > 0)
                return $.post('/en/bookings/GetResourceProducts?bookingId=' + bid + '&resourceId=' + rid);
            else
                return $.post('/en/bookings/GetResourceProducts?resourceId=' + $('#Booking_Resource').val());
        }
        var mapData = function(data){
            return vm.bookingProducts = ko.mapping.fromJS(data);
        }
        var updateData = function(data){
            return vm.bookingProducts = ko.mapping.fromJS(data, vm.bookingProducts);
        }
        var applyBindings = function() {
            return ko.applyBindings(vm);
        }
        var updateProducts = function(){ 
            $.when(loadProducts())
             .then(updateData)
             .then(checkBooking);
        }
        vm = {
            bookingProducts: ko.observableArray(),
            updateProducts: updateProducts,
            checkBooking: checkBooking
        };
           
        $.when(loadProducts())
         .then(mapData)
         .then(applyBindings)
    });
              
    function getColurFromName(str){
        // Generate a Hash for the String
        var hash = function(word) {
            var h = 0;
            for (var i = 0; i < word.length; i++) {
                h = word.charCodeAt(i) + ((h << 5) - h);
            }
            return h;
        };
               
        // Change the darkness or lightness
        var shade = function(color, prc) {
            var num = parseInt(color, 16),
                amt = Math.round(2.55 * prc),
                R = (num >> 16) + amt,
                G = (num >> 8 & 0x00FF) + amt,
                B = (num & 0x0000FF) + amt;
            return (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 +
                    (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 +
                    (B < 255 ? B < 1 ? 0 : B : 255))
              .toString(16)
              .slice(1);
                 
        };
        // Convert init to an RGBA
        var int_to_rgba = function(i) {
            var color = ((i >> 24) & 0xFF).toString(16) +
                ((i >> 16) & 0xFF).toString(16) +
                ((i >> 8) & 0xFF).toString(16) +
                (i & 0xFF).toString(16);
            return color;
        };
               
        return '#' + shade(int_to_rgba(hash(str)), -10);
    }
       
</script>
{% endblock %}